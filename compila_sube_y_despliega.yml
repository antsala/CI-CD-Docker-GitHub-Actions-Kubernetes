on: 
  push
name: implementar
jobs:
  deploy:
    name: Integración y Despliegue Continuo (CI/CD)
    runs-on: ubuntu-latest
    steps:
      - name: Hacemos pull del repo en 'ubuntu-latest'
        uses: actions/checkout@v2

      - name: Iniciamos sesión en Docker Hub desde 'ubuntu-latest'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Configuramos 'Docker Buildx' en 'ubuntu-latest'
        uses: docker/setup-buildx-action@v1

      - name: Capturamos la fecha y hora para ponersela como etiqueta.
        id: gettime
        uses: nanzm/get-time-action@v1.1
        with:
          timeZone: 2
          format: 'YYYY-MM-DD-HH-mm'

      - name: Compilamos la imagen y hacemos push a Docker Hub.
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/hellocontainer_cicd:${{ steps.gettime.outputs.time }}

      - name: Cambiamos la imagen de los contenedores
        uses: steebchen/kubectl@v2.0.0
        with:
          config: ${{ secrets.KUBE_CONFIG_DATA }}
          command: set image deployment/hello-container-deployment hello-container=${{ secrets.DOCKER_HUB_USERNAME }}/hellocontainer_cicd:${{ steps.gettime.outputs.time }}

      - name: Verificar que el deployment está corriendo.
        uses: steebchen/kubectl@v2.0.0
        with:
          config: ${{ secrets.KUBE_CONFIG_DATA }}
          command: rollout status deployment/hello-container-deployment
